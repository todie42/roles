---
- name: Update Package Cache (apt/Ubuntu)
  apt:
    update_cache: yes
  changed_when: false
  when: ansible_distribution == "Ubuntu"


- name: Update Package Cache (dnf/CentOS)
  dnf:
    update_cache: yes
  changed_when: false
  when: ansible_distribution == "CentOS"


- name: Get packages
  package:
    state: latest
    name: "{{item}}"
  loop:
    - vim
    - vim-gtk3
    - perl
    - curl
    - wget
    - rsnapshot
    - git
  #become: True      


- name: Add user - same as the user calling the playbook
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    shell: /bin/bash


- name: Determine available groups
  getent:
    database: group


- name: Add additional groups to user
  ansible.builtin.user:
    user: "{{ lookup('env', 'USER') }}"
    groups: "{{item}}"
    append: True
  when: item in ansible_facts.getent_group
  with_items: 
      - sudo
      - wheel


- name: Create bash profiles dir
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/terminal_profiles"
    state: directory
    mode: '0755'


- name: Copy bash profiles to ~/terminal_profiles
  ansible.builtin.copy:
    src: "{{role_path}}/files/{{item}}"
    dest: "{{ lookup('env', 'HOME') }}/terminal_profiles/{{item}}"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: '0770'
  loop:
    - work
    - spotter


- name: Copy rc files to home dir
  ansible.builtin.copy:
    src: "{{role_path}}/files/{{item}}"
    dest: "{{ lookup('env', 'HOME') }}/{{item}}"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: '0600'
  loop:
    - .vimrc
    - .bashrc
    - .bc
    - .inputrc


- name: Copy .bashrc to a sudo file
  ansible.builtin.copy:
    src: "{{role_path}}/files/.bashrc"
    dest: "{{ lookup('env', 'HOME') }}/.bashrc_sudo"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: '0600'


- name: Make sure root confirms before deletes
  blockinfile:
    path: "{{ lookup('env', 'HOME') }}/.bashrc_sudo"
    block: |
      alias rm='rm -i'      
      alias cp='cp -i'
      alias mv='mv -i'


- name: Change root's terminal color to red
  ansible.builtin.replace:
    path: "{{ lookup('env', 'HOME') }}/.bashrc_sudo"
    regexp: '1;32m'
    replace: '1;31m'

- name: hot key for next tab
  shell: "gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ next-tab '<Shift>Right'"
  become: False


- name: hot key for previous tab
  shell: "gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ prev-tab '<Shift>Left'"
  become: False

- name: Set screen timeout to 1 hour
  shell: "gsettings set org.gnome.desktop.session idle-delay 3600"
  become: False


- name: Make sure vim-plug is installed
  shell: "curl -fLo {{ lookup('env', 'HOME') }}/.vim/autoload/plug.vim --create-dirs   https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  args:
    warn: False


- name: Set permissions for .vim dir
  file:
    dest: "{{ lookup('env', 'HOME') }}/.vim"
    owner: "{{ lookup('env', 'USER') }}" 
    group: "{{ lookup('env', 'USER') }}"
    mode: u=rwX,g=rX,o=rX
    recurse: yes


- name: Load vim plugins
  shell: "vim +PlugInstall +qall"
  become: False


- name: copy my perl-support changes
  ansible.builtin.copy:
    src: "{{role_path}}/files/{{item}}"
    dest: "{{ lookup('env', 'HOME') }}/.vim/plugged/perl-support/perl-support/templates/{{item}}"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: '0600'
  loop:
    - comments.templates
    - idioms.templates


- name: Commented out line for file server
  ansible.builtin.lineinfile:
    path: /etc/fstab
    state: present
    line: '#\\192.168.0.xxx\Media /mnt/FREENAS cifs vers=3.0,user,uid=1000,gid=1000,rw,username=username,password=secret 0 0'


- name: Setup rsnapshot alpha
  ansible.builtin.lineinfile:
    path: /etc/cron.d/rsnapshot
    regex: '^\s*#.*alpha'
    line: '0   */4   * * *         root    /usr/bin/rsnapshot alpha'


- name: Setup rsnapshot beta
  ansible.builtin.lineinfile:
    path: /etc/cron.d/rsnapshot
    regex: '^\s*#.*beta'
    line: '30  3     * * *         root    /usr/bin/rsnapshot beta'


- name: Setup rsnapshot gamma
  ansible.builtin.lineinfile:
    path: /etc/cron.d/rsnapshot
    regex: '^\s*#.*gamma'
    line: '0   3     * * 1         root    /usr/bin/rsnapshot gamma'



